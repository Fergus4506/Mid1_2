import math

#題目簡述
#在一個由1*1方格構築的矩形中由右上往左下切割，去找尋被切割成相等面積大小的矩形

#1.面積切割後要相等=>要過圖形中點
#2.此題圖形切割線由右上至左下=>必過中點
#3.大圖會過中點=>找相似正方形
#4.最小相似正方形=>取邊長最大公因式
#5.最大公因式=>最小相似正方形的長寬

#EX: 6*10
    # 1 1 1 1 1 1
    # 1 1 1 1 1 1
    # 1 1 1 1 1 1
    # 1 1 1 1 1 1
    # 1 1 1 1 1 1
    # 1 1 1 1 1 1
    # 1 1 1 1 1 1
    # 1 1 1 1 1 1
    # 1 1 1 1 1 1
    # 1 1 1 1 1 1
# =>最小相似正方形
    # 1 1 1
    # 1 1 1
    # 1 1 1
    # 1 1 1
    # 1 1 1
#  由最大公因數可知最多可以拆出兩個最小相似三角形
#  =>答案為2

#須注意的點:
#最小相似正方形的兩邊需要都是奇數才可以，只要其中一個為偶數都會使中心點位於邊線上
#導致答案為0
def gcd(m, n):
    #輾轉相除找最大公因數
    a = m
    b = n
    if n > m:
        m, n = n, m
    while m % n:
        k = n
        n = m % n
        m = k

    #最大公因數找到後除與邊長可知最小相似正方形的邊
    a=a//n
    b=b//n
    # print(a,b)

    #處理邊一偶一奇的問題
    if (a&1 and b&1):
        return n
    else:
        return 0

m,n=map(int, input().split())
# print(math.gcd(m,n))
print(gcd(m,n))